<?xml version="1.0" encoding="utf-8"?>
<InstructionData xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <DateTime>134028396729732739</DateTime>
  <GameVersion>0.2.5914.26037</GameVersion>
  <Title>Printer Manager</Title>
  <Description>Identifies ingot requirements, accepts a "master" chip to clone instructions from, and handles accepting itemsâ€‹</Description>
  <Author>MrDrummer25</Author>
  <WorkshopFileHandle>0</WorkshopFileHandle>
  <Instructions>alias IngotDb d0
alias Printer d1
alias Display d2
alias Dial d3
alias Temp1 r0
alias Temp2 r1
alias Temp3 r2
alias DialSetting r10
alias IngotRemainder r11
alias IngotExpectedQty r12
alias IngotActualQty r13
alias IngotHash r14
alias IngotDbIndex r15

start:
clr db # clear stack
move sp 0 # stack pointer to 0
move IngotDbIndex 0
l DialSetting Dial Setting
bnezal DialSetting ShowItem

loop:
get IngotExpectedQty IngotDb IngotDbIndex
add IngotDbIndex IngotDbIndex 1
get IngotHash IngotDb IngotDbIndex
add IngotDbIndex IngotDbIndex 1
sub IngotRemainder IngotExpectedQty IngotActualQty
bgtz IngotRemainder loop

push IngotHash
push IngotRemainder
lr IngotActualQty Printer Contents IngotHash
s Display Setting IngotActualQty
j loop

ShowItem:
sub Temp1 DialSetting 1 # Convert to 0 based index
mul Temp1 Temp1 2 # Stack pointer index (2 values per item)
get Temp2 db Temp1
s db Setting Temp2 # Set chip's setting to the selected item's prefab hash
add Temp1 Temp1 1 # Move to quantity index
get Temp3 db Temp1
s Display Setting r2 # Set display to quantity
j ra
</Instructions>
</InstructionData>
