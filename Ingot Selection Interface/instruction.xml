<?xml version="1.0" encoding="utf-8"?>
<InstructionData xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <DateTime>134034561562181108</DateTime>
  <GameVersion>0.2.5924.26069</GameVersion>
  <Title>Ingot Selection Interface</Title>
  <Description>Item scroller, Quantity selection, GO button and two displays for displaying request total and remainder. Prevents releasing more stacks than a silo contains.â€‹</Description>
  <Author>MrDrummer25</Author>
  <WorkshopFileHandle>0</WorkshopFileHandle>
  <Instructions>alias IngotSiloDb d0
alias ItemDial d1
alias QuantityDial d2
# alias RequestQtyDisplay d3
# alias RemainingQtyDisplay d3
alias SubmitButton d3
alias LabelDisplay d4
alias InterlockMemory d5
# Setting will be hash, used by display

alias IngotIndexSkip r9
alias RequestCode r10
alias IngotStackIndex r11
alias IngotIndex r12
alias QuantityDialSetting r13
alias SelectedIngotHash r14
alias ItemDialSetting r15

# SIZE, TYPE, DESTINATIONID
define DESTINATIONID 0

Start:
move ItemDialSetting -1
get IngotIndexSkip IngotSiloDb 510 # Stack indexes per ingot (2: ingot hash, silo hash, vending hash, sorter hash, string label, reserved)
get r0 IngotSiloDb 511 # Get total number of ingots to check
s ItemDial Mode r0 # Set max dial value
s LabelDisplay Color Color.White
s LabelDisplay Mode DisplayMode.String

MainLoop:
l r0 ItemDial Setting
bneal r0 ItemDialSetting ChangeItem # not the same as the dial

l QuantityDialSetting QuantityDial Setting

l r0 SubmitButton Activate
bnezal r0 RequestItem # != 0

j MainLoop

ChangeItem:
move ItemDialSetting r0
snez r2 r0
s LabelDisplay On r0
beqz r2 ra #if zero, back the way we came
sub IngotIndex ItemDialSetting 1 # convert to 0 based index
mul IngotStackIndex IngotIndex IngotIndexSkip
get SelectedIngotHash IngotSiloDb IngotStackIndex # Get prefab hash
add IngotStackIndex IngotStackIndex 1
get r0 IngotSiloDb IngotStackIndex # Get silo hash
lbn r1 HASH("StructureSDBSilo") r0 Quantity Sum

add IngotStackIndex IngotStackIndex 1
get r0 IngotSiloDb IngotStackIndex # Get vending hash
lbn r2 HASH("StructureVendingMachineSmall") r0 Quantity Sum
add r3 r1 r2
add r3 r3 2 # account for ingots in chutes
#Limit quantity dial max to available in silo

# TODO: Fix bug where we set max to 1 by default when the silo may be empty.
s QuantityDial Mode r3

#s QuantityDial Setting 1
add IngotStackIndex IngotStackIndex 3
get r0 IngotSiloDb IngotStackIndex # Get string label
s LabelDisplay Setting r0
j ra # Jump back to main loop


RequestItem:
s SubmitButton Lock 1
max QuantityDialSetting QuantityDialSetting 1

move RequestCode QuantityDialSetting
mul RequestCode RequestCode 100 # Max 100 items per request
add RequestCode RequestCode IngotIndex
mul RequestCode RequestCode 100 # Shift left 2 decimal places
add RequestCode RequestCode DESTINATIONID # Add destination ID (0 for printer)

s LabelDisplay Color Color.Gray # Indicate Waiting
InterlockWaitLoop:
yield
l r0 InterlockMemory Setting
bnez r0 InterlockWaitLoop # Wait for interlock to clear

s InterlockMemory Setting RequestCode # Write request code to interlock memory
s LabelDisplay Color Color.Orange # Indicate request sent
RequestFullfillWait:
yield
l r0 InterlockMemory Setting
beq r0 RequestCode RequestFullfillWait
sgez r0 r0
select r0 r0 Color.Green Color.Red
s LabelDisplay Color r0
sleep 1
s LabelDisplay Color Color.White
s SubmitButton Lock 0
j ra</Instructions>
</InstructionData>
